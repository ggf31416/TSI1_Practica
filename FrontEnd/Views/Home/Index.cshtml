@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title></title>
    <script src="~/Scripts/phaser.min.js"></script>

</head>
<body>

    <script>

        var game = new Phaser.Game(800, 600, Phaser.AUTO, 'phaser-example', { preload: preload, create: create, update: update });

        var menuCuartel;
        var cursors;

        function preload() {

            //  You can fill the preloader with as many assets as your game requires

            //  Here we are loading an image. The first parameter is the unique
            //  string by which we'll identify the image later in our code.

            //  The second parameter is the URL of the image (relative)
            // por ahora harcodeado
            game.load.image('grass', '/Content/img/grass.jpg');
            game.load.image('cuartel', '/Content/img/Barracks4.png');
            game.load.image('cuartelMenu', '/Content/img/cuartel.jpg');

        }

        var buildings;

        function create() {
            game.world.resize(2000, 2000);

            var tile = game.add.tileSprite(0, 0, game.world.width, game.world.height, "grass");
            tile.tileScale = new PIXI.Point(0.25, 0.25);
            menuCuartel = game.add.sprite(0, 0, 'cuartelMenu');
            menuCuartel.width = 64;
            menuCuartel.height = 64;
            menuCuartel.inputEnabled = true;
            menuCuartel.events.onInputDown.add(inicioDrag, this);
            menuCuartel.fixedToCamera = true;

            buildings = game.add.physicsGroup();

            cursors = game.input.keyboard.createCursorKeys();

        }

        function inicioDrag() {
            // worldX,Y obtienen la posicion del puntero en relacion al mundo
            // x,y solos obtinen en relacion a la camara
            var input_x = game.input.worldX;
            var input_y = game.input.worldY;

            //var cuartel = game.add(input_x, input_y, 'cuartel');

            var cuartel = buildings.create(input_x, input_y, 'cuartel');
            cuartel.height = 128;
            cuartel.width = 128;
            cuartel.anchor.x = 0.5;
            cuartel.anchor.y = 0.5;
            cuartel.inputEnabled = true;
            cuartel.input.enableDrag();
            // tam_grilla_x,tam_grilla_y, ajustar a grilla al: arrastrar, soltar
            cuartel.input.enableSnap(128, 128, true, true);
            game.physics.arcade.enable(cuartel);
            cuartel.events.onDragStart.add(onDragStartBuild, this);
            cuartel.events.onDragStop.add(onDragStopBuild, this);
            cuartel.events.onDragUpdate.add(onDragUpdateBuild);

        }

        function onDragStartBuild(sprite, pointer) {
            sprite.body.moves = false;
        }

        function onDragUpdateBuild(sprite,pointer){
            if (game.physics.arcade.overlap(sprite, buildings)) {
                //game.debug.spriteBounds(sprite,0xFF8000);
            }
            else {
                //game.debug.spriteBounds(sprite, 0x00FF00);
            }
        }

        function onDragStopBuild(sprite, pointer) {
            if (!checkOverlap(sprite, menuCuartel)) {
                sprite.input.draggable = false;
                buildings.add(sprite);
                sprite.tint = 0xFFFFFF;
            }
        }

        function checkOverlap(spriteA, spriteB) {

            var boundsA = spriteA.getBounds();
            var boundsB = spriteB.getBounds();

            return Phaser.Rectangle.intersects(boundsA, boundsB);
        }

        function update() {
            if (cursors.up.isDown) {
                game.camera.y -= 4;
            }
            else if (cursors.down.isDown) {
                game.camera.y += 4;
            }

            if (cursors.left.isDown) {
                game.camera.x -= 4;
            }
            else if (cursors.right.isDown) {
                game.camera.x += 4;
            }



        }


    </script>
    <div>

    </div>
</body>
</html>


