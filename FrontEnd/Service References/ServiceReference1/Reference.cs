//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FrontEnd.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/JugarUnidad", ReplyAction="http://tempuri.org/IService1/JugarUnidadResponse")]
        void JugarUnidad(Shared.Entities.InfoCelda infoCelda);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/JugarUnidad", ReplyAction="http://tempuri.org/IService1/JugarUnidadResponse")]
        System.Threading.Tasks.Task JugarUnidadAsync(Shared.Entities.InfoCelda infoCelda);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Accion", ReplyAction="http://tempuri.org/IService1/AccionResponse")]
        void Accion(string tenant, string json);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Accion", ReplyAction="http://tempuri.org/IService1/AccionResponse")]
        System.Threading.Tasks.Task AccionAsync(string tenant, string json);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/login", ReplyAction="http://tempuri.org/IService1/loginResponse")]
        bool login(Shared.Entities.ClienteJuego cliente, string nombreJuego);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/login", ReplyAction="http://tempuri.org/IService1/loginResponse")]
        System.Threading.Tasks.Task<bool> loginAsync(Shared.Entities.ClienteJuego cliente, string nombreJuego);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/register", ReplyAction="http://tempuri.org/IService1/registerResponse")]
        void register(Shared.Entities.ClienteJuego cliente, string nombreJuego);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/register", ReplyAction="http://tempuri.org/IService1/registerResponse")]
        System.Threading.Tasks.Task registerAsync(Shared.Entities.ClienteJuego cliente, string nombreJuego);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/IniciarAtaque", ReplyAction="http://tempuri.org/IService1/IniciarAtaqueResponse")]
        void IniciarAtaque(string tenant, Shared.Entities.InfoAtaque info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/IniciarAtaque", ReplyAction="http://tempuri.org/IService1/IniciarAtaqueResponse")]
        System.Threading.Tasks.Task IniciarAtaqueAsync(string tenant, Shared.Entities.InfoAtaque info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllDataJuego", ReplyAction="http://tempuri.org/IService1/GetAllDataJuegoResponse")]
        Shared.Entities.Juego GetAllDataJuego(string tenant);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllDataJuego", ReplyAction="http://tempuri.org/IService1/GetAllDataJuegoResponse")]
        System.Threading.Tasks.Task<Shared.Entities.Juego> GetAllDataJuegoAsync(string tenant);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ConstruirEdificio", ReplyAction="http://tempuri.org/IService1/ConstruirEdificioResponse")]
        bool ConstruirEdificio(Shared.Entities.CEInputData ceid, string Tenant, string NombreJugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ConstruirEdificio", ReplyAction="http://tempuri.org/IService1/ConstruirEdificioResponse")]
        System.Threading.Tasks.Task<bool> ConstruirEdificioAsync(Shared.Entities.CEInputData ceid, string Tenant, string NombreJugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EntrenarUnidad", ReplyAction="http://tempuri.org/IService1/EntrenarUnidadResponse")]
        int EntrenarUnidad(Shared.Entities.EUInputData euid, string Tenant, string NombreJugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EntrenarUnidad", ReplyAction="http://tempuri.org/IService1/EntrenarUnidadResponse")]
        System.Threading.Tasks.Task<int> EntrenarUnidadAsync(Shared.Entities.EUInputData euid, string Tenant, string NombreJugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEntidadesActualizadas", ReplyAction="http://tempuri.org/IService1/GetEntidadesActualizadasResponse")]
        Shared.Entities.ListasEntidades GetEntidadesActualizadas(string tenant, string nombreJugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEntidadesActualizadas", ReplyAction="http://tempuri.org/IService1/GetEntidadesActualizadasResponse")]
        System.Threading.Tasks.Task<Shared.Entities.ListasEntidades> GetEntidadesActualizadasAsync(string tenant, string nombreJugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetJuegoUsuario", ReplyAction="http://tempuri.org/IService1/GetJuegoUsuarioResponse")]
        Shared.Entities.Juego GetJuegoUsuario(string tenant, string idUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetJuegoUsuario", ReplyAction="http://tempuri.org/IService1/GetJuegoUsuarioResponse")]
        System.Threading.Tasks.Task<Shared.Entities.Juego> GetJuegoUsuarioAsync(string tenant, string idUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DesarrollarTecnologia", ReplyAction="http://tempuri.org/IService1/DesarrollarTecnologiaResponse")]
        bool DesarrollarTecnologia(string tenant, string idJugador, int idTecnologia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DesarrollarTecnologia", ReplyAction="http://tempuri.org/IService1/DesarrollarTecnologiaResponse")]
        System.Threading.Tasks.Task<bool> DesarrollarTecnologiaAsync(string tenant, string idJugador, int idTecnologia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetJugadoresAtacables", ReplyAction="http://tempuri.org/IService1/GetJugadoresAtacablesResponse")]
        Shared.Entities.ClienteJuego[] GetJugadoresAtacables(string Tenant, string NombreJugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetJugadoresAtacables", ReplyAction="http://tempuri.org/IService1/GetJugadoresAtacablesResponse")]
        System.Threading.Tasks.Task<Shared.Entities.ClienteJuego[]> GetJugadoresAtacablesAsync(string Tenant, string NombreJugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CrearClan", ReplyAction="http://tempuri.org/IService1/CrearClanResponse")]
        void CrearClan(string NombreClan, string Tenant, string IdJugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CrearClan", ReplyAction="http://tempuri.org/IService1/CrearClanResponse")]
        System.Threading.Tasks.Task CrearClanAsync(string NombreClan, string Tenant, string IdJugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AbandonarClan", ReplyAction="http://tempuri.org/IService1/AbandonarClanResponse")]
        bool AbandonarClan(string Tenant, string IdJugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AbandonarClan", ReplyAction="http://tempuri.org/IService1/AbandonarClanResponse")]
        System.Threading.Tasks.Task<bool> AbandonarClanAsync(string Tenant, string IdJugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetJugadoresSinClan", ReplyAction="http://tempuri.org/IService1/GetJugadoresSinClanResponse")]
        Shared.Entities.ClienteJuego[] GetJugadoresSinClan(string Tenant, string IdJugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetJugadoresSinClan", ReplyAction="http://tempuri.org/IService1/GetJugadoresSinClanResponse")]
        System.Threading.Tasks.Task<Shared.Entities.ClienteJuego[]> GetJugadoresSinClanAsync(string Tenant, string IdJugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AgregarJugadorClan", ReplyAction="http://tempuri.org/IService1/AgregarJugadorClanResponse")]
        bool AgregarJugadorClan(Shared.Entities.ClienteJuego Jugador, string Tenant, string IdJugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AgregarJugadorClan", ReplyAction="http://tempuri.org/IService1/AgregarJugadorClanResponse")]
        System.Threading.Tasks.Task<bool> AgregarJugadorClanAsync(Shared.Entities.ClienteJuego Jugador, string Tenant, string IdJugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetJugadoresEnElClan", ReplyAction="http://tempuri.org/IService1/GetJugadoresEnElClanResponse")]
        Shared.Entities.ClienteJuego[] GetJugadoresEnElClan(string Tenant, string IdJugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetJugadoresEnElClan", ReplyAction="http://tempuri.org/IService1/GetJugadoresEnElClanResponse")]
        System.Threading.Tasks.Task<Shared.Entities.ClienteJuego[]> GetJugadoresEnElClanAsync(string Tenant, string IdJugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SoyAdministrador", ReplyAction="http://tempuri.org/IService1/SoyAdministradorResponse")]
        bool SoyAdministrador(string Tenant, string IdJugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SoyAdministrador", ReplyAction="http://tempuri.org/IService1/SoyAdministradorResponse")]
        System.Threading.Tasks.Task<bool> SoyAdministradorAsync(string Tenant, string IdJugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EnviarRecursos", ReplyAction="http://tempuri.org/IService1/EnviarRecursosResponse")]
        int EnviarRecursos(Shared.Entities.RecursoAsociado[] tributos, string IdJugadorDestino, string Tenant, string IdJugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EnviarRecursos", ReplyAction="http://tempuri.org/IService1/EnviarRecursosResponse")]
        System.Threading.Tasks.Task<int> EnviarRecursosAsync(Shared.Entities.RecursoAsociado[] tributos, string IdJugadorDestino, string Tenant, string IdJugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEstadoBatalla", ReplyAction="http://tempuri.org/IService1/GetEstadoBatallaResponse")]
        string GetEstadoBatalla(string tenant, string idJugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEstadoBatalla", ReplyAction="http://tempuri.org/IService1/GetEstadoBatallaResponse")]
        System.Threading.Tasks.Task<string> GetEstadoBatallaAsync(string tenant, string idJugador);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : FrontEnd.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<FrontEnd.ServiceReference1.IService1>, FrontEnd.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void JugarUnidad(Shared.Entities.InfoCelda infoCelda) {
            base.Channel.JugarUnidad(infoCelda);
        }
        
        public System.Threading.Tasks.Task JugarUnidadAsync(Shared.Entities.InfoCelda infoCelda) {
            return base.Channel.JugarUnidadAsync(infoCelda);
        }
        
        public void Accion(string tenant, string json) {
            base.Channel.Accion(tenant, json);
        }
        
        public System.Threading.Tasks.Task AccionAsync(string tenant, string json) {
            return base.Channel.AccionAsync(tenant, json);
        }
        
        public bool login(Shared.Entities.ClienteJuego cliente, string nombreJuego) {
            return base.Channel.login(cliente, nombreJuego);
        }
        
        public System.Threading.Tasks.Task<bool> loginAsync(Shared.Entities.ClienteJuego cliente, string nombreJuego) {
            return base.Channel.loginAsync(cliente, nombreJuego);
        }
        
        public void register(Shared.Entities.ClienteJuego cliente, string nombreJuego) {
            base.Channel.register(cliente, nombreJuego);
        }
        
        public System.Threading.Tasks.Task registerAsync(Shared.Entities.ClienteJuego cliente, string nombreJuego) {
            return base.Channel.registerAsync(cliente, nombreJuego);
        }
        
        public void IniciarAtaque(string tenant, Shared.Entities.InfoAtaque info) {
            base.Channel.IniciarAtaque(tenant, info);
        }
        
        public System.Threading.Tasks.Task IniciarAtaqueAsync(string tenant, Shared.Entities.InfoAtaque info) {
            return base.Channel.IniciarAtaqueAsync(tenant, info);
        }
        
        public Shared.Entities.Juego GetAllDataJuego(string tenant) {
            return base.Channel.GetAllDataJuego(tenant);
        }
        
        public System.Threading.Tasks.Task<Shared.Entities.Juego> GetAllDataJuegoAsync(string tenant) {
            return base.Channel.GetAllDataJuegoAsync(tenant);
        }
        
        public bool ConstruirEdificio(Shared.Entities.CEInputData ceid, string Tenant, string NombreJugador) {
            return base.Channel.ConstruirEdificio(ceid, Tenant, NombreJugador);
        }
        
        public System.Threading.Tasks.Task<bool> ConstruirEdificioAsync(Shared.Entities.CEInputData ceid, string Tenant, string NombreJugador) {
            return base.Channel.ConstruirEdificioAsync(ceid, Tenant, NombreJugador);
        }
        
        public int EntrenarUnidad(Shared.Entities.EUInputData euid, string Tenant, string NombreJugador) {
            return base.Channel.EntrenarUnidad(euid, Tenant, NombreJugador);
        }
        
        public System.Threading.Tasks.Task<int> EntrenarUnidadAsync(Shared.Entities.EUInputData euid, string Tenant, string NombreJugador) {
            return base.Channel.EntrenarUnidadAsync(euid, Tenant, NombreJugador);
        }
        
        public Shared.Entities.ListasEntidades GetEntidadesActualizadas(string tenant, string nombreJugador) {
            return base.Channel.GetEntidadesActualizadas(tenant, nombreJugador);
        }
        
        public System.Threading.Tasks.Task<Shared.Entities.ListasEntidades> GetEntidadesActualizadasAsync(string tenant, string nombreJugador) {
            return base.Channel.GetEntidadesActualizadasAsync(tenant, nombreJugador);
        }
        
        public Shared.Entities.Juego GetJuegoUsuario(string tenant, string idUsuario) {
            return base.Channel.GetJuegoUsuario(tenant, idUsuario);
        }
        
        public System.Threading.Tasks.Task<Shared.Entities.Juego> GetJuegoUsuarioAsync(string tenant, string idUsuario) {
            return base.Channel.GetJuegoUsuarioAsync(tenant, idUsuario);
        }
        
        public bool DesarrollarTecnologia(string tenant, string idJugador, int idTecnologia) {
            return base.Channel.DesarrollarTecnologia(tenant, idJugador, idTecnologia);
        }
        
        public System.Threading.Tasks.Task<bool> DesarrollarTecnologiaAsync(string tenant, string idJugador, int idTecnologia) {
            return base.Channel.DesarrollarTecnologiaAsync(tenant, idJugador, idTecnologia);
        }
        
        public Shared.Entities.ClienteJuego[] GetJugadoresAtacables(string Tenant, string NombreJugador) {
            return base.Channel.GetJugadoresAtacables(Tenant, NombreJugador);
        }
        
        public System.Threading.Tasks.Task<Shared.Entities.ClienteJuego[]> GetJugadoresAtacablesAsync(string Tenant, string NombreJugador) {
            return base.Channel.GetJugadoresAtacablesAsync(Tenant, NombreJugador);
        }
        
        public void CrearClan(string NombreClan, string Tenant, string IdJugador) {
            base.Channel.CrearClan(NombreClan, Tenant, IdJugador);
        }
        
        public System.Threading.Tasks.Task CrearClanAsync(string NombreClan, string Tenant, string IdJugador) {
            return base.Channel.CrearClanAsync(NombreClan, Tenant, IdJugador);
        }
        
        public bool AbandonarClan(string Tenant, string IdJugador) {
            return base.Channel.AbandonarClan(Tenant, IdJugador);
        }
        
        public System.Threading.Tasks.Task<bool> AbandonarClanAsync(string Tenant, string IdJugador) {
            return base.Channel.AbandonarClanAsync(Tenant, IdJugador);
        }
        
        public Shared.Entities.ClienteJuego[] GetJugadoresSinClan(string Tenant, string IdJugador) {
            return base.Channel.GetJugadoresSinClan(Tenant, IdJugador);
        }
        
        public System.Threading.Tasks.Task<Shared.Entities.ClienteJuego[]> GetJugadoresSinClanAsync(string Tenant, string IdJugador) {
            return base.Channel.GetJugadoresSinClanAsync(Tenant, IdJugador);
        }
        
        public bool AgregarJugadorClan(Shared.Entities.ClienteJuego Jugador, string Tenant, string IdJugador) {
            return base.Channel.AgregarJugadorClan(Jugador, Tenant, IdJugador);
        }
        
        public System.Threading.Tasks.Task<bool> AgregarJugadorClanAsync(Shared.Entities.ClienteJuego Jugador, string Tenant, string IdJugador) {
            return base.Channel.AgregarJugadorClanAsync(Jugador, Tenant, IdJugador);
        }
        
        public Shared.Entities.ClienteJuego[] GetJugadoresEnElClan(string Tenant, string IdJugador) {
            return base.Channel.GetJugadoresEnElClan(Tenant, IdJugador);
        }
        
        public System.Threading.Tasks.Task<Shared.Entities.ClienteJuego[]> GetJugadoresEnElClanAsync(string Tenant, string IdJugador) {
            return base.Channel.GetJugadoresEnElClanAsync(Tenant, IdJugador);
        }
        
        public bool SoyAdministrador(string Tenant, string IdJugador) {
            return base.Channel.SoyAdministrador(Tenant, IdJugador);
        }
        
        public System.Threading.Tasks.Task<bool> SoyAdministradorAsync(string Tenant, string IdJugador) {
            return base.Channel.SoyAdministradorAsync(Tenant, IdJugador);
        }
        
        public int EnviarRecursos(Shared.Entities.RecursoAsociado[] tributos, string IdJugadorDestino, string Tenant, string IdJugador) {
            return base.Channel.EnviarRecursos(tributos, IdJugadorDestino, Tenant, IdJugador);
        }
        
        public System.Threading.Tasks.Task<int> EnviarRecursosAsync(Shared.Entities.RecursoAsociado[] tributos, string IdJugadorDestino, string Tenant, string IdJugador) {
            return base.Channel.EnviarRecursosAsync(tributos, IdJugadorDestino, Tenant, IdJugador);
        }
        
        public string GetEstadoBatalla(string tenant, string idJugador) {
            return base.Channel.GetEstadoBatalla(tenant, idJugador);
        }
        
        public System.Threading.Tasks.Task<string> GetEstadoBatallaAsync(string tenant, string idJugador) {
            return base.Channel.GetEstadoBatallaAsync(tenant, idJugador);
        }
    }
}
